package com.bjwg.back.dao;

import com.bjwg.back.model.Wallet;
import com.bjwg.back.model.WalletExample;
import java.util.List;

public interface WalletDao {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bjwg_wallet
     *
     * @mbggenerated
     */
    int countByExample(WalletExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bjwg_wallet
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Long walletId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bjwg_wallet
     *
     * @mbggenerated
     */
    int insert(Wallet record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bjwg_wallet
     *
     * @mbggenerated
     */
    int insertSelective(Wallet record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bjwg_wallet
     *
     * @mbggenerated
     */
    List<Wallet> selectByExample(WalletExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bjwg_wallet
     *
     * @mbggenerated
     */
    Wallet selectByPrimaryKey(Long walletId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bjwg_wallet
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(Wallet record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bjwg_wallet
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(Wallet record);
    
    /**
     * 通过用户id查询余额信息
     * @param userId
     * @return
     */
    Wallet selectByUserId(Long userId);
    
    /**
     * 批量修改余额
     * @param list
     * @return
     */
    int updateBatch(List<Wallet> list);
}