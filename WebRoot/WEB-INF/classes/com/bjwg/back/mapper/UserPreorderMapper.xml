<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bjwg.back.dao.UserPreorderDao" >
  <resultMap id="BaseResultMap" type="com.bjwg.back.model.UserPreorder" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="t_user_id" property="userId" jdbcType="BIGINT" />
    <id column="t_project_id" property="projectId" jdbcType="BIGINT" />
    <result column="t_ctime" property="ctime" jdbcType="DATE" />
    <result column="t_num" property="num" jdbcType="INTEGER" />
  </resultMap>
  
  
  
  <resultMap id="BaseResultMap1" type="com.bjwg.back.model.UserPreorder" >
    <id column="paincbuy_project_id" property="projectId" jdbcType="BIGINT" />
    <id column="urpo_user_id" property="userId" jdbcType="BIGINT" />
    <result column="urpo_num" property="num" jdbcType="INTEGER" />
    <result column="urpo_username" property="username" jdbcType="VARCHAR" />
    <result column="urpo_ctime" property="ctime" jdbcType="DATE" />
  </resultMap>
  
  
  
  
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  
  <sql id="Base_Column_List2" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    urpo.project_id as urpo_project_id, urpo.user_id as urpo_user_id,urpo.num as urpo_num, urpo.ctime as urpo_ctime
   
  </sql>
  
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    t.user_id as t_user_id, t.project_id as t_project_id, t.ctime as t_ctime, t.num as t_num
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bjwg.back.model.UserPreorderExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bjwg_user_preorder t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from bjwg_user_preorder t
    where t.user_id = #{userId,jdbcType=BIGINT}
      and t.project_id = #{projectId,jdbcType=BIGINT}
  </select>
  
  <select id="getAllUserPreOrder" resultMap="BaseResultMap" parameterType="java.util.HashMap" >
	   	select t_user_id,t_project_id,t_ctime,t_num,username from
	   	(select t.user_id as t_user_id,-1 as t_project_id,t.setting_time as t_ctime,t.setting_value as t_num,u.username as username from bjwg_user_ext t left join bjwg_user u on t.user_id = u.user_id 
	   	where t.setting_type= 1 
		UNION 
		select p.user_id as t_user_id,p.project_id as t_project_id,p.ctime as t_ctime,p.num as t_num,u.username as username from bjwg_user_ext t left join bjwg_user_preorder p on t.user_id = p.user_id left join bjwg_user u on p.user_id = u.user_id
		where p.project_id = #{projectId} 
		and t.setting_type= 2 
		ORDER BY t_ctime) a where not EXISTS(select 1 from bjwg_order o where  o.user_id = a.t_user_id and o.relation_id = #{projectId} and o.status != -1)
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from bjwg_user_preorder
    where user_id = #{userId,jdbcType=BIGINT}
      and project_id = #{projectId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bjwg.back.model.UserPreorder" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="userId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bjwg_user_preorder (user_id,project_id, ctime, num
      )
    values (#{userId,jdbcType=BIGINT},#{projectId,jdbcType=BIGINT}, #{ctime,jdbcType=DATE}, #{num,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bjwg.back.model.UserPreorder" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="userId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bjwg_user_preorder
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
      <if test="num != null" >
        num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="projectId != null" >
        #{projectId,jdbcType=BIGINT},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=DATE},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bjwg.back.model.UserPreorderExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from bjwg_user_preorder t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.bjwg.back.model.UserPreorder" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update bjwg_user_preorder
    <set >
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=DATE},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
      and project_id = #{projectId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bjwg.back.model.UserPreorder" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update bjwg_user_preorder
    set ctime = #{ctime,jdbcType=DATE},
      num = #{num,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=BIGINT}
      and project_id = #{projectId,jdbcType=BIGINT}
  </update>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      limit #{page.currentRow} , #{page.perRows}
    </if>
  </sql>
  
  
  <select id="selectLoadNameByMap" resultMap="BaseResultMap1" parameterType="java.util.HashMap" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List2" />
    ,pbpro.name as username,pbpro.paincbuy_project_id
    from bjwg_panicbuy_project pbpro
    left join 
    (	select * from 
    		bjwg_user_preorder urpo
    	where urpo.user_id = #{userId,jdbcType=BIGINT}
    ) as urpo
    on urpo.project_id = pbpro.paincbuy_project_id
    where pbpro.begin_time > #{beginTime}
    order by pbpro.begin_time asc
    <if test="top != null" >
   	 limit 0, #{top}
   	</if>
  </select>
  
</mapper>