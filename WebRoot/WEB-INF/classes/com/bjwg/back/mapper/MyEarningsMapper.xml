<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bjwg.back.dao.MyEarningsDao" >
  <resultMap id="BaseResultMap" type="com.bjwg.back.model.MyEarnings" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="mer_earnings_id" property="earningsId" jdbcType="BIGINT" />
    <result column="mer_user_id" property="userId" jdbcType="BIGINT" />
    <result column="mer_num" property="num" jdbcType="INTEGER" />
    <result column="mer_rate" property="rate" jdbcType="DECIMAL" />
    <result column="mer_begin_time" property="beginTime" jdbcType="DATE" />
    <result column="mer_days" property="days" jdbcType="INTEGER" />
    <result column="mer_end_time" property="endTime" jdbcType="DATE" />
    <result column="mer_money" property="money" jdbcType="DECIMAL" />
    <result column="mer_expect_earning" property="expectEarning" jdbcType="DECIMAL" />
    <result column="mer_paincbuy_project_id" property="paincbuyProjectId" jdbcType="BIGINT" />
    <result column="mer_paincbuy_project_name" property="paincbuyProjectName" jdbcType="VARCHAR" />
    <result column="mer_present_num" property="presentNum" jdbcType="INTEGER" />
    <result column="mer_deal_type" property="dealType" jdbcType="TINYINT" />
    <result column="mer_deal_status" property="dealStatus" jdbcType="TINYINT" />
    <result column="mer_deal_time" property="dealTime" jdbcType="DATE" />
    <result column="mer_over_time" property="overTime" jdbcType="DATE" />
    <result column="mer_over_days" property="overDays" jdbcType="INTEGER" />
    <result column="mer_remark" property="remark" jdbcType="VARCHAR" />
    <result column="mer_before_deal_type" property="beforeDealType" jdbcType="TINYINT" />
  </resultMap>
  
  
  
  <resultMap id="BaseResultMap1" type="com.bjwg.back.model.MyEarnings" >
    <id column="mer_earnings_id" property="earningsId" jdbcType="BIGINT" />
    <result column="mer_user_id" property="userId" jdbcType="BIGINT" />
    <result column="mer_num" property="num" jdbcType="INTEGER" />
    <result column="mer_days" property="days" jdbcType="INTEGER" />
    <result column="mer_rate" property="rate" jdbcType="DECIMAL" />
    <result column="mer_begin_time" property="beginTime" jdbcType="DATE" />
    <result column="mer_end_time" property="endTime" jdbcType="DATE" />
    <result column="mer_money" property="money" jdbcType="DECIMAL" />
    <result column="mer_expect_earning" property="expectEarning" jdbcType="DECIMAL" />
    <result column="mer_paincbuy_project_id" property="paincbuyProjectId" jdbcType="BIGINT" />
    <result column="mer_paincbuy_project_name" property="paincbuyProjectName" jdbcType="VARCHAR" />
    <result column="total_num" property="totalNum" jdbcType="INTEGER" />
    <result column="mer_present_num" property="presentNum" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="BaseResultMap2" type="com.bjwg.back.model.MyEarnings" >
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="money" property="money" jdbcType="DECIMAL" />
    <result column="days" property="days" jdbcType="INTEGER" />
    <result column="begin_time" property="beginTime" jdbcType="DATE" />
    <result column="end_time" property="endTime" jdbcType="DATE" />
    <result column="paincbuy_project_id" property="paincbuyProjectId" jdbcType="BIGINT" />
    <result column="name" property="paincbuyProjectName" jdbcType="VARCHAR" />
    <result column="total_num" property="totalNum" jdbcType="INTEGER" />
    <result column="purchase_num" property="purchaseNum" jdbcType="INTEGER" />
    <result column="rate" property="rate" jdbcType="DECIMAL" />
    <result column="left_num" property="leftNum" jdbcType="INTEGER" />
  </resultMap>
  
  
  
  
  <resultMap id="BaseResultMap3" type="com.bjwg.back.model.MyEarnings" >
  	<result column="earnings_id" property="earningsId" jdbcType="BIGINT" />
    <result column="paincbuy_project_id" property="paincbuyProjectId" jdbcType="BIGINT" />
    <result column="paincbuy_project_name" property="paincbuyProjectName" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    mer.earnings_id as mer_earnings_id, mer.user_id as mer_user_id, mer.num as mer_num, 
    mer.rate as mer_rate, mer.begin_time as mer_begin_time, mer.days as mer_days, mer.end_time as mer_end_time, 
    mer.money as mer_money, mer.expect_earning as mer_expect_earning, mer.paincbuy_project_id as mer_paincbuy_project_id, 
    mer.paincbuy_project_name as mer_paincbuy_project_name, mer.present_num as mer_present_num, 
    mer.deal_type as mer_deal_type, mer.deal_status as mer_deal_status, mer.deal_time as mer_deal_time, 
    mer.over_time as mer_over_time, mer.over_days as mer_over_days, mer.remark as mer_remark, 
    mer.before_deal_type as mer_before_deal_type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bjwg.back.model.MyEarningsExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bjwg_my_earnings mer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from bjwg_my_earnings mer
    where mer.earnings_id = #{earningsId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from bjwg_my_earnings
    where earnings_id = #{earningsId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bjwg.back.model.MyEarnings" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="earningsId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bjwg_my_earnings (user_id, num, rate, 
      begin_time, days, end_time, 
      money, expect_earning, paincbuy_project_id, 
      paincbuy_project_name, present_num, deal_type, 
      deal_status, deal_time, over_time, 
      over_days, remark, before_deal_type
      )
    values (#{userId,jdbcType=BIGINT}, #{num,jdbcType=INTEGER}, #{rate,jdbcType=DECIMAL}, 
      #{beginTime,jdbcType=DATE}, #{days,jdbcType=INTEGER}, #{endTime,jdbcType=DATE}, 
      #{money,jdbcType=DECIMAL}, #{expectEarning,jdbcType=DECIMAL}, #{paincbuyProjectId,jdbcType=BIGINT}, 
      #{paincbuyProjectName,jdbcType=VARCHAR}, #{presentNum,jdbcType=INTEGER}, #{dealType,jdbcType=TINYINT}, 
      #{dealStatus,jdbcType=TINYINT}, #{dealTime,jdbcType=DATE}, #{overTime,jdbcType=DATE}, 
      #{overDays,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{beforeDealType,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bjwg.back.model.MyEarnings" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="earningsId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bjwg_my_earnings
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="rate != null" >
        rate,
      </if>
      <if test="beginTime != null" >
        begin_time,
      </if>
      <if test="days != null" >
        days,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="expectEarning != null" >
        expect_earning,
      </if>
      <if test="paincbuyProjectId != null" >
        paincbuy_project_id,
      </if>
      <if test="paincbuyProjectName != null" >
        paincbuy_project_name,
      </if>
      <if test="presentNum != null" >
        present_num,
      </if>
      <if test="dealType != null" >
        deal_type,
      </if>
      <if test="dealStatus != null" >
        deal_status,
      </if>
      <if test="dealTime != null" >
        deal_time,
      </if>
      <if test="overTime != null" >
        over_time,
      </if>
      <if test="overDays != null" >
        over_days,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="beforeDealType != null" >
        before_deal_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="rate != null" >
        #{rate,jdbcType=DECIMAL},
      </if>
      <if test="beginTime != null" >
        #{beginTime,jdbcType=DATE},
      </if>
      <if test="days != null" >
        #{days,jdbcType=INTEGER},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=DATE},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="expectEarning != null" >
        #{expectEarning,jdbcType=DECIMAL},
      </if>
      <if test="paincbuyProjectId != null" >
        #{paincbuyProjectId,jdbcType=BIGINT},
      </if>
      <if test="paincbuyProjectName != null" >
        #{paincbuyProjectName,jdbcType=VARCHAR},
      </if>
      <if test="presentNum != null" >
        #{presentNum,jdbcType=INTEGER},
      </if>
      <if test="dealType != null" >
        #{dealType,jdbcType=TINYINT},
      </if>
      <if test="dealStatus != null" >
        #{dealStatus,jdbcType=TINYINT},
      </if>
      <if test="dealTime != null" >
        #{dealTime,jdbcType=DATE},
      </if>
      <if test="overTime != null" >
        #{overTime,jdbcType=DATE},
      </if>
      <if test="overDays != null" >
        #{overDays,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="beforeDealType != null" >
        #{beforeDealType,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bjwg.back.model.MyEarningsExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from bjwg_my_earnings mer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.bjwg.back.model.MyEarnings" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update bjwg_my_earnings
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="rate != null" >
        rate = #{rate,jdbcType=DECIMAL},
      </if>
      <if test="beginTime != null" >
        begin_time = #{beginTime,jdbcType=DATE},
      </if>
      <if test="days != null" >
        days = #{days,jdbcType=INTEGER},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=DATE},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="expectEarning != null" >
        expect_earning = #{expectEarning,jdbcType=DECIMAL},
      </if>
      <if test="paincbuyProjectId != null" >
        paincbuy_project_id = #{paincbuyProjectId,jdbcType=BIGINT},
      </if>
      <if test="paincbuyProjectName != null" >
        paincbuy_project_name = #{paincbuyProjectName,jdbcType=VARCHAR},
      </if>
      <if test="presentNum != null" >
        present_num = #{presentNum,jdbcType=INTEGER},
      </if>
      <if test="dealType != null" >
        deal_type = #{dealType,jdbcType=TINYINT},
      </if>
      <if test="dealStatus != null" >
        deal_status = #{dealStatus,jdbcType=TINYINT},
      </if>
      <if test="dealTime != null" >
        deal_time = #{dealTime,jdbcType=DATE},
      </if>
      <if test="overTime != null" >
        over_time = #{overTime,jdbcType=DATE},
      </if>
      <if test="overDays != null" >
        over_days = #{overDays,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="beforeDealType != null" >
        before_deal_type = #{beforeDealType,jdbcType=TINYINT},
      </if>
    </set>
    where earnings_id = #{earningsId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bjwg.back.model.MyEarnings" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update bjwg_my_earnings
    set user_id = #{userId,jdbcType=BIGINT},
      num = #{num,jdbcType=INTEGER},
      rate = #{rate,jdbcType=DECIMAL},
      begin_time = #{beginTime,jdbcType=DATE},
      days = #{days,jdbcType=INTEGER},
      end_time = #{endTime,jdbcType=DATE},
      money = #{money,jdbcType=DECIMAL},
      expect_earning = #{expectEarning,jdbcType=DECIMAL},
      paincbuy_project_id = #{paincbuyProjectId,jdbcType=BIGINT},
      paincbuy_project_name = #{paincbuyProjectName,jdbcType=VARCHAR},
      present_num = #{presentNum,jdbcType=INTEGER},
      deal_type = #{dealType,jdbcType=TINYINT},
      deal_status = #{dealStatus,jdbcType=TINYINT},
      deal_time = #{dealTime,jdbcType=DATE},
      over_time = #{overTime,jdbcType=DATE},
      over_days = #{overDays,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      before_deal_type = #{beforeDealType,jdbcType=TINYINT}
    where earnings_id = #{earningsId,jdbcType=BIGINT}
  </update>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      limit #{page.currentRow} , #{page.perRows}
    </if>
  </sql>
  
  
  
  <!-- 进入农场数据：猪头总数(从订单中获取)、最近期的数据（代码中计算成长状态和收益） -->
  <select id="selectMyHomeData" resultMap="BaseResultMap1" parameterType="java.util.HashMap" >
    SELECT a.TOTAL_NUM,b.* FROM(
		SELECT SUM(NUM - PRESENT_NUM) TOTAL_NUM,mer.USER_ID FROM bjwg_my_earnings mer 
		WHERE mer.USER_ID = #{userId,jdbcType=BIGINT}
		 <if test="currentTime != null" >
	 	   AND mer.END_TIME >= #{currentTime}
	 	</if>
		GROUP BY mer.USER_ID
	) a LEFT JOIN
	(
		SELECT <include refid="Base_Column_List" /> FROM bjwg_my_earnings mer 
		WHERE mer.USER_ID = #{userId,jdbcType=BIGINT}
		ORDER BY mer.BEGIN_TIME DESC 
		LIMIT 0,1 
	) b
	 ON a.USER_ID = b.mer_user_id 
    
  </select>
  
  
  <!-- 查询每期的已抢购总数、个人抢购总数、个人花费的成本、开始和结束时间、每期总数、每期的id和名称 -->
  <select id="selectMyFinancing" resultMap="BaseResultMap2" parameterType="java.util.HashMap" >
  	
	select a1.*,a2.*,pp.num,pp.name,pp.left_num from(
		select paincbuy_project_id,(num - present_num) as purchase_num,(money * (num- present_num)) as money,begin_time,end_time,days,rate from bjwg_my_earnings mer
		where user_id = #{userId,jdbcType=BIGINT}
		<if test="projectId != null" >
	        and mer.paincbuy_project_id = #{projectId,jdbcType=BIGINT}
	    </if>
		group by paincbuy_project_id,money,begin_time,end_time,days
	)a1
	INNER JOIN
	(
		select sum(num) total_num,paincbuy_project_id from bjwg_my_earnings
		group by paincbuy_project_id
	)a2,bjwg_panicbuy_project pp
	where a1.paincbuy_project_id = a2.paincbuy_project_id
	and a1.paincbuy_project_id = pp.paincbuy_project_id
	<include refid="OracleDialectSuffix" />
  </select>
  
  
  <!-- 查询我参与的每期 -->
  <select id="selectAllJoin" resultMap="BaseResultMap3" parameterType="java.lang.Long" >
		select mer.earnings_id, mer.paincbuy_project_id,mer.paincbuy_project_name from bjwg_my_earnings mer
		where mer.user_id = #{userId,jdbcType=BIGINT}
		order by mer.begin_time desc
  </select>
  
  <!-- 查询所有期猪总数 -->
  <select id="selectAllCount" resultType="java.lang.Integer" parameterType="java.lang.Long" >
		SELECT SUM(NUM - PRESENT_NUM) FROM bjwg_my_earnings mer WHERE mer.USER_ID = #{userId,jdbcType=BIGINT}
  </select>
  
  
  <update id="updateDealType" parameterType="com.bjwg.back.model.MyEarnings" >
    update bjwg_my_earnings
    set
      deal_type = #{dealType,jdbcType=TINYINT},     
      before_deal_type = #{beforeDealType,jdbcType=TINYINT}
    where earnings_id = #{earningsId,jdbcType=BIGINT}
  </update>
  
</mapper>