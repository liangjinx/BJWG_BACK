<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bjwg.back.dao.MessageDao" >
  <resultMap id="BaseResultMap" type="com.bjwg.back.model.Message" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="t_message_id" property="messageId" jdbcType="BIGINT" />
    <result column="t_user_id" property="userId" jdbcType="BIGINT" />
    <result column="t_ctime" property="ctime" jdbcType="TIMESTAMP" />
    <result column="t_content" property="content" jdbcType="VARCHAR" />
    <result column="t_message_type" property="messageType" jdbcType="TINYINT" />
    <result column="t_relation_id" property="relationId" jdbcType="BIGINT" />
    <result column="t_relation_type" property="relationType" jdbcType="TINYINT" />
    <result column="t_status" property="status" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    t.message_id as t_message_id, t.user_id as t_user_id, t.ctime as t_ctime, t.content as t_content, 
    t.message_type as t_message_type, t.relation_id as t_relation_id, t.relation_type as t_relation_type, 
    t.status as t_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bjwg.back.model.MessageExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />,u.username as username 
    from bjwg_message t left join bjwg_user u on t.user_id = u.user_id 
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from bjwg_message t
    where t.message_id = #{messageId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from bjwg_message
    where message_id = #{messageId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bjwg.back.model.Message" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="messageId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bjwg_message (user_id, ctime, content, 
      message_type, relation_id, relation_type, 
      status)
    values (#{userId,jdbcType=BIGINT}, #{ctime,jdbcType=TIMESTAMP}, #{content,jdbcType=VARCHAR}, 
      #{messageType,jdbcType=TINYINT}, #{relationId,jdbcType=BIGINT}, #{relationType,jdbcType=TINYINT}, 
      #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.bjwg.back.model.Message" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="messageId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bjwg_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="ctime != null" >
        ctime,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="messageType != null" >
        message_type,
      </if>
      <if test="relationId != null" >
        relation_id,
      </if>
      <if test="relationType != null" >
        relation_type,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="ctime != null" >
        #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="messageType != null" >
        #{messageType,jdbcType=TINYINT},
      </if>
      <if test="relationId != null" >
        #{relationId,jdbcType=BIGINT},
      </if>
      <if test="relationType != null" >
        #{relationType,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bjwg.back.model.MessageExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from bjwg_message t left join bjwg_user u on t.user_id = u.user_id 
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.bjwg.back.model.Message" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update bjwg_message
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="ctime != null" >
        ctime = #{ctime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="messageType != null" >
        message_type = #{messageType,jdbcType=TINYINT},
      </if>
      <if test="relationId != null" >
        relation_id = #{relationId,jdbcType=BIGINT},
      </if>
      <if test="relationType != null" >
        relation_type = #{relationType,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where message_id = #{messageId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bjwg.back.model.Message" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update bjwg_message
    set user_id = #{userId,jdbcType=BIGINT},
      ctime = #{ctime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=VARCHAR},
      message_type = #{messageType,jdbcType=TINYINT},
      relation_id = #{relationId,jdbcType=BIGINT},
      relation_type = #{relationType,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT}
    where message_id = #{messageId,jdbcType=BIGINT}
  </update>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      limit #{page.currentRow} , #{page.perRows}
    </if>
  </sql>
</mapper>