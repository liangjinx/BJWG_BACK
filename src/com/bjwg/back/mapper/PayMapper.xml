<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bjwg.back.dao.PayDao" >
  <resultMap id="BaseResultMap" type="com.bjwg.back.model.Pay" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="t_trade_no" property="tradeNo" jdbcType="VARCHAR" />
    <result column="t_order_code" property="orderCode" jdbcType="VARCHAR" />
    <result column="t_order_id" property="orderId" jdbcType="BIGINT" />
    <result column="t_trade_status" property="tradeStatus" jdbcType="VARCHAR" />
    <result column="t_buyer" property="buyer" jdbcType="VARCHAR" />
    <result column="t_seller" property="seller" jdbcType="VARCHAR" />
    <result column="t_gmt_create_time" property="gmtCreateTime" jdbcType="TIMESTAMP" />
    <result column="t_gmt_pay_time" property="gmtPayTime" jdbcType="TIMESTAMP" />
    <result column="t_total_money" property="totalMoney" jdbcType="DECIMAL" />
    <result column="t_fail_msg" property="failMsg" jdbcType="VARCHAR" />
    <result column="t_pay_type" property="payType" jdbcType="TINYINT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.bjwg.back.model.Pay" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="t_source_data" property="sourceData" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    t.trade_no as t_trade_no, t.order_code as t_order_code, t.order_id as t_order_id, 
    t.trade_status as t_trade_status, t.buyer as t_buyer, t.seller as t_seller, t.gmt_create_time as t_gmt_create_time, 
    t.gmt_pay_time as t_gmt_pay_time, t.total_money as t_total_money, t.fail_msg as t_fail_msg, 
    t.pay_type as t_pay_type
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    t.source_data as t_source_data
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.bjwg.back.model.PayExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bjwg_pay t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bjwg.back.model.PayExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bjwg_pay t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from bjwg_pay t
    where t.trade_no = #{tradeNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from bjwg_pay
    where trade_no = #{tradeNo,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.bjwg.back.model.Pay" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into bjwg_pay (trade_no, order_code, order_id, 
      trade_status, buyer, seller, 
      gmt_create_time, gmt_pay_time, total_money, 
      fail_msg, pay_type, source_data
      )
    values (#{tradeNo,jdbcType=VARCHAR}, #{orderCode,jdbcType=VARCHAR}, #{orderId,jdbcType=BIGINT}, 
      #{tradeStatus,jdbcType=VARCHAR}, #{buyer,jdbcType=VARCHAR}, #{seller,jdbcType=VARCHAR}, 
      #{gmtCreateTime,jdbcType=TIMESTAMP}, #{gmtPayTime,jdbcType=TIMESTAMP}, #{totalMoney,jdbcType=DECIMAL}, 
      #{failMsg,jdbcType=VARCHAR}, #{payType,jdbcType=TINYINT}, #{sourceData,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bjwg.back.model.Pay" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into bjwg_pay
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tradeNo != null" >
        trade_no,
      </if>
      <if test="orderCode != null" >
        order_code,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="tradeStatus != null" >
        trade_status,
      </if>
      <if test="buyer != null" >
        buyer,
      </if>
      <if test="seller != null" >
        seller,
      </if>
      <if test="gmtCreateTime != null" >
        gmt_create_time,
      </if>
      <if test="gmtPayTime != null" >
        gmt_pay_time,
      </if>
      <if test="totalMoney != null" >
        total_money,
      </if>
      <if test="failMsg != null" >
        fail_msg,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="sourceData != null" >
        source_data,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tradeNo != null" >
        #{tradeNo,jdbcType=VARCHAR},
      </if>
      <if test="orderCode != null" >
        #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="tradeStatus != null" >
        #{tradeStatus,jdbcType=VARCHAR},
      </if>
      <if test="buyer != null" >
        #{buyer,jdbcType=VARCHAR},
      </if>
      <if test="seller != null" >
        #{seller,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreateTime != null" >
        #{gmtCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtPayTime != null" >
        #{gmtPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalMoney != null" >
        #{totalMoney,jdbcType=DECIMAL},
      </if>
      <if test="failMsg != null" >
        #{failMsg,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=TINYINT},
      </if>
      <if test="sourceData != null" >
        #{sourceData,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bjwg.back.model.PayExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from bjwg_pay t
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.bjwg.back.model.Pay" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update bjwg_pay
    <set >
      <if test="orderCode != null" >
        order_code = #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="tradeStatus != null" >
        trade_status = #{tradeStatus,jdbcType=VARCHAR},
      </if>
      <if test="buyer != null" >
        buyer = #{buyer,jdbcType=VARCHAR},
      </if>
      <if test="seller != null" >
        seller = #{seller,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreateTime != null" >
        gmt_create_time = #{gmtCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtPayTime != null" >
        gmt_pay_time = #{gmtPayTime,jdbcType=TIMESTAMP},
      </if>
      <if test="totalMoney != null" >
        total_money = #{totalMoney,jdbcType=DECIMAL},
      </if>
      <if test="failMsg != null" >
        fail_msg = #{failMsg,jdbcType=VARCHAR},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=TINYINT},
      </if>
      <if test="sourceData != null" >
        source_data = #{sourceData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where trade_no = #{tradeNo,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bjwg.back.model.Pay" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update bjwg_pay
    set order_code = #{orderCode,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=BIGINT},
      trade_status = #{tradeStatus,jdbcType=VARCHAR},
      buyer = #{buyer,jdbcType=VARCHAR},
      seller = #{seller,jdbcType=VARCHAR},
      gmt_create_time = #{gmtCreateTime,jdbcType=TIMESTAMP},
      gmt_pay_time = #{gmtPayTime,jdbcType=TIMESTAMP},
      total_money = #{totalMoney,jdbcType=DECIMAL},
      fail_msg = #{failMsg,jdbcType=VARCHAR},
      pay_type = #{payType,jdbcType=TINYINT},
      source_data = #{sourceData,jdbcType=LONGVARCHAR}
    where trade_no = #{tradeNo,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bjwg.back.model.Pay" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update bjwg_pay
    set order_code = #{orderCode,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=BIGINT},
      trade_status = #{tradeStatus,jdbcType=VARCHAR},
      buyer = #{buyer,jdbcType=VARCHAR},
      seller = #{seller,jdbcType=VARCHAR},
      gmt_create_time = #{gmtCreateTime,jdbcType=TIMESTAMP},
      gmt_pay_time = #{gmtPayTime,jdbcType=TIMESTAMP},
      total_money = #{totalMoney,jdbcType=DECIMAL},
      fail_msg = #{failMsg,jdbcType=VARCHAR},
      pay_type = #{payType,jdbcType=TINYINT}
    where trade_no = #{tradeNo,jdbcType=VARCHAR}
  </update>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      limit #{page.currentRow} , #{page.perRows}
    </if>
  </sql>
</mapper>