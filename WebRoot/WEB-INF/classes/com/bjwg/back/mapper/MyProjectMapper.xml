<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bjwg.back.dao.MyProjectDao" >
  <resultMap id="BaseResultMap" type="com.bjwg.back.model.MyProject" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="t_earnings_id" property="earningsId" jdbcType="BIGINT" />
    <result column="t_user_id" property="userId" jdbcType="BIGINT" />
    <result column="t_num" property="num" jdbcType="INTEGER" />
    <result column="t_rate" property="rate" jdbcType="DECIMAL" />
    <result column="t_begin_time" property="beginTime" jdbcType="DATE" />
    <result column="t_days" property="days" jdbcType="INTEGER" />
    <result column="t_end_time" property="endTime" jdbcType="DATE" />
    <result column="t_money" property="money" jdbcType="DECIMAL" />
    <result column="t_expect_earning" property="expectEarning" jdbcType="DECIMAL" />
    <result column="t_paincbuy_project_id" property="paincbuyProjectId" jdbcType="BIGINT" />
    <result column="t_paincbuy_project_name" property="paincbuyProjectName" jdbcType="VARCHAR" />
    <result column="t_present_num" property="presentNum" jdbcType="INTEGER" />
    <result column="t_deal_type" property="dealType" jdbcType="TINYINT" />
    <result column="t_deal_status" property="dealStatus" jdbcType="TINYINT" />
    <result column="t_deal_time" property="dealTime" jdbcType="DATE" />
    <result column="t_over_time" property="overTime" jdbcType="DATE" />
    <result column="t_over_days" property="overDays" jdbcType="INTEGER" />
    <result column="t_remark" property="remark" jdbcType="VARCHAR" />
    <result column="t_before_deal_type" property="beforeDealType" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    t.earnings_id as t_earnings_id, t.user_id as t_user_id, t.num as t_num, t.rate as t_rate, 
    t.begin_time as t_begin_time, t.days as t_days, t.end_time as t_end_time, t.money as t_money, 
    t.expect_earning as t_expect_earning, t.paincbuy_project_id as t_paincbuy_project_id, 
    t.paincbuy_project_name as t_paincbuy_project_name, t.present_num as t_present_num, 
    t.deal_type as t_deal_type, t.deal_status as t_deal_status, t.deal_time as t_deal_time, 
    t.over_time as t_over_time, t.over_days as t_over_days, t.remark as t_remark, t.before_deal_type as t_before_deal_type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bjwg.back.model.MyProjectExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,u.username as username 
    from bjwg_my_earnings t left join bjwg_user u on t.user_id = u.user_id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from bjwg_my_earnings t
    where t.earnings_id = #{earningsId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from bjwg_my_earnings
    where earnings_id = #{earningsId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByUserIds" parameterType="java.util.List" >
    delete from bjwg_my_earnings
    where user_id in 
	<foreach collection="list" index="index" item="item" separator="," open="(" close=")">
		#{item,jdbcType=BIGINT}
	</foreach>
  </delete>
  <insert id="insert" parameterType="com.bjwg.back.model.MyProject" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="earningsId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bjwg_my_earnings (user_id, num, rate, 
      begin_time, days, end_time, 
      money, expect_earning, paincbuy_project_id, 
      paincbuy_project_name, present_num, deal_type, 
      deal_status, deal_time, over_time, 
      over_days, remark, before_deal_type
      )
    values (#{userId,jdbcType=BIGINT}, #{num,jdbcType=INTEGER}, #{rate,jdbcType=DECIMAL}, 
      #{beginTime,jdbcType=DATE}, #{days,jdbcType=INTEGER}, #{endTime,jdbcType=DATE}, 
      #{money,jdbcType=DECIMAL}, #{expectEarning,jdbcType=DECIMAL}, #{paincbuyProjectId,jdbcType=BIGINT}, 
      #{paincbuyProjectName,jdbcType=VARCHAR}, #{presentNum,jdbcType=INTEGER}, #{dealType,jdbcType=TINYINT}, 
      #{dealStatus,jdbcType=TINYINT}, #{dealTime,jdbcType=DATE}, #{overTime,jdbcType=DATE}, 
      #{overDays,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{beforeDealType,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bjwg.back.model.MyProject" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="earningsId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into bjwg_my_earnings
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="rate != null" >
        rate,
      </if>
      <if test="beginTime != null" >
        begin_time,
      </if>
      <if test="days != null" >
        days,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="money != null" >
        money,
      </if>
      <if test="expectEarning != null" >
        expect_earning,
      </if>
      <if test="paincbuyProjectId != null" >
        paincbuy_project_id,
      </if>
      <if test="paincbuyProjectName != null" >
        paincbuy_project_name,
      </if>
      <if test="presentNum != null" >
        present_num,
      </if>
      <if test="dealType != null" >
        deal_type,
      </if>
      <if test="dealStatus != null" >
        deal_status,
      </if>
      <if test="dealTime != null" >
        deal_time,
      </if>
      <if test="overTime != null" >
        over_time,
      </if>
      <if test="overDays != null" >
        over_days,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="beforeDealType != null" >
        before_deal_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="rate != null" >
        #{rate,jdbcType=DECIMAL},
      </if>
      <if test="beginTime != null" >
        #{beginTime,jdbcType=DATE},
      </if>
      <if test="days != null" >
        #{days,jdbcType=INTEGER},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=DATE},
      </if>
      <if test="money != null" >
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="expectEarning != null" >
        #{expectEarning,jdbcType=DECIMAL},
      </if>
      <if test="paincbuyProjectId != null" >
        #{paincbuyProjectId,jdbcType=BIGINT},
      </if>
      <if test="paincbuyProjectName != null" >
        #{paincbuyProjectName,jdbcType=VARCHAR},
      </if>
      <if test="presentNum != null" >
        #{presentNum,jdbcType=INTEGER},
      </if>
      <if test="dealType != null" >
        #{dealType,jdbcType=TINYINT},
      </if>
      <if test="dealStatus != null" >
        #{dealStatus,jdbcType=TINYINT},
      </if>
      <if test="dealTime != null" >
        #{dealTime,jdbcType=DATE},
      </if>
      <if test="overTime != null" >
        #{overTime,jdbcType=DATE},
      </if>
      <if test="overDays != null" >
        #{overDays,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="beforeDealType != null" >
        #{beforeDealType,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bjwg.back.model.MyProjectExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from bjwg_my_earnings t left join bjwg_user u on t.user_id = u.user_id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.bjwg.back.model.MyProject" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update bjwg_my_earnings
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="rate != null" >
        rate = #{rate,jdbcType=DECIMAL},
      </if>
      <if test="beginTime != null" >
        begin_time = #{beginTime,jdbcType=DATE},
      </if>
      <if test="days != null" >
        days = #{days,jdbcType=INTEGER},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=DATE},
      </if>
      <if test="money != null" >
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="expectEarning != null" >
        expect_earning = #{expectEarning,jdbcType=DECIMAL},
      </if>
      <if test="paincbuyProjectId != null" >
        paincbuy_project_id = #{paincbuyProjectId,jdbcType=BIGINT},
      </if>
      <if test="paincbuyProjectName != null" >
        paincbuy_project_name = #{paincbuyProjectName,jdbcType=VARCHAR},
      </if>
      <if test="presentNum != null" >
        present_num = #{presentNum,jdbcType=INTEGER},
      </if>
      <if test="dealType != null" >
        deal_type = #{dealType,jdbcType=TINYINT},
      </if>
      <if test="dealStatus != null" >
        deal_status = #{dealStatus,jdbcType=TINYINT},
      </if>
      <if test="dealTime != null" >
        deal_time = #{dealTime,jdbcType=DATE},
      </if>
      <if test="overTime != null" >
        over_time = #{overTime,jdbcType=DATE},
      </if>
      <if test="overDays != null" >
        over_days = #{overDays,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="beforeDealType != null" >
        before_deal_type = #{beforeDealType,jdbcType=TINYINT},
      </if>
    </set>
    where earnings_id = #{earningsId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bjwg.back.model.MyProject" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update bjwg_my_earnings
    set user_id = #{userId,jdbcType=BIGINT},
      num = #{num,jdbcType=INTEGER},
      rate = #{rate,jdbcType=DECIMAL},
      begin_time = #{beginTime,jdbcType=DATE},
      days = #{days,jdbcType=INTEGER},
      end_time = #{endTime,jdbcType=DATE},
      money = #{money,jdbcType=DECIMAL},
      expect_earning = #{expectEarning,jdbcType=DECIMAL},
      paincbuy_project_id = #{paincbuyProjectId,jdbcType=BIGINT},
      paincbuy_project_name = #{paincbuyProjectName,jdbcType=VARCHAR},
      present_num = #{presentNum,jdbcType=INTEGER},
      deal_type = #{dealType,jdbcType=TINYINT},
      deal_status = #{dealStatus,jdbcType=TINYINT},
      deal_time = #{dealTime,jdbcType=DATE},
      over_time = #{overTime,jdbcType=DATE},
      over_days = #{overDays,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      before_deal_type = #{beforeDealType,jdbcType=TINYINT}
    where earnings_id = #{earningsId,jdbcType=BIGINT}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
	  update bjwg_my_earnings set
	    deal_type=
	  <foreach collection="list" item="item" index="index" separator=" " open="case earnings_id" close="end">
	      when #{item.earningsId,jdbcType=BIGINT} then #{item.dealType,jdbcType=TINYINT}
	  </foreach>
	  ,deal_status=
	  <foreach collection="list" item="item" index="index" separator=" " open="case earnings_id" close="end">
	      when #{item.earningsId,jdbcType=BIGINT} then #{item.dealStatus,jdbcType=TINYINT}
	  </foreach>
	  ,deal_time=
	  <foreach collection="list" item="item" index="index" separator=" " open="case earnings_id" close="end">
	      when #{item.earningsId,jdbcType=BIGINT} then #{item.dealTime,jdbcType=DATE}
	  </foreach>
	  where earnings_id in
	  <foreach collection="list" index="index" item="item" separator="," open="(" close=")">
	      #{item.earningsId,jdbcType=BIGINT}
	  </foreach>
  </update>
  
  <select id="updateDealType">
    update bjwg_my_earnings set deal_type = #{0},before_deal_type = #{1} where paincbuy_project_id = #{2} and user_id = #{3}
  </select>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      limit #{page.currentRow} , #{page.perRows}
    </if>
  </sql>
</mapper>